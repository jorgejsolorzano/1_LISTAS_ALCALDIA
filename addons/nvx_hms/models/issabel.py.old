import logging
#import paramiko
from odoo import http
from odoo.http import request
from odoo.addons.website.controllers.main import Website

_logger = logging.getLogger(__name__)

class MuldersWebsite(Website):

    def _activate_ip(ip):

        ssh = paramiko.SSHClient()

        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

        ssh.connect('54.196.26.1', username='centos', key_filename='/etc/odoo/awsaportarkey.pem')

        stdin, stdout, stderr = ssh.exec_command(f'sudo firewall-cmd --permanent --zone=work --add-source={ip}/32')
        _logger.debug(f'web_login ssh fwd >>>>>>>>>>>>>>>>> add_ip  {stdout.readlines()}')
        stdin, stdout, stderr = ssh.exec_command(f'sudo firewall-cmd --reload')
        _logger.debug(f'web_login ssh fwd >>>>>>>>>>>>>>>>> reaload  {stdout.readlines()}')
        ssh.close()

    # ------------------------------------------------------
    # Login - overwrite of the website login to have after login hook
    # ------------------------------------------------------

    @http.route(website=True, auth="public")
    def web_login(self, redirect=None, *args, **kw):
        response = super(MuldersWebsite, self).web_login(redirect=redirect, *args, **kw)
        if request.params['login_success']:
            ip = request.httprequest.environ['HTTP_CF_CONNECTING_IP']
            _logger.debug(f'web_login >>>>>>>>>>>>>>>>>>>>>>>>>>{str(ip)}>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ')
            #self._activate_ip(ip)
            pass
        return response